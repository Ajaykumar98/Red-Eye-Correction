import cv2import numpy as npframe = cv2.imread("redeye5.jpg")outImage=frame.copy()#gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)hsv=cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)#cv2.imwrite("hsvr.jpg",hsv)lower_range = np.array([170,120,110])upper_range = np.array([180,255,255])mask=cv2.inRange(hsv,lower_range,upper_range)_, cnts, _ = cv2.findContours(mask.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE) clone = frame.copy() #cv2.drawContours(clone, cnts, -1, (0, 255, 0), 2)for (i, c) in enumerate(cnts):    (x, y, w, h) = cv2.boundingRect(c)    x=x-10    y=y-10    w=w+20    h=h+20    area = cv2.contourArea(c)    perimeter = cv2.arcLength(c, True)     if area>11.0:            print "Contour #%d -- area: %.2f, perimeter: %.2f" % (i+1, area, perimeter)                   #if area==502.00 or area==650.50 or area==19.00 or area==12.00 or area==13 or(area==17.50 and i==1):                         eyeImage = clone [y:y+h , x:x+w]            cv2.imshow("Eyeimage",eyeImage)            b, g ,r = cv2.split(eyeImage)            bg = cv2.add(b,g)            cv2.imshow("BG",bg)            mask2  = ( (r>(bg-10)) & (r>90) ).astype(np.uint8)*255                        cv2.imshow("threshold mask",mask2)            _, contours, _ = cv2. findContours(mask2.copy() ,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE )                  maxArea = 0            maxCont = None                        for (ic,cont) in enumerate(contours):                are = cv2.contourArea(cont)                                if are > maxArea:                    maxArea = are                    maxCont = cont            mask2 = mask2 * 0                         cv2.drawContours(mask2 , [maxCont],0 ,(255),-1 )            cv2.imshow("Drawcontours Mask",mask2)            mask2 = cv2.morphologyEx(mask2, cv2.MORPH_CLOSE, cv2.getStructuringElement(cv2.MORPH_RECT,(5,5)) )                        mask2 = cv2.dilate(mask2 , (3,3) ,iterations=3)            cv2.imshow("after op",mask2)            mean  = bg /2            cv2.imshow("Mean",mean)            mean = cv2.bitwise_and(mean , mask2 )              cv2.imshow("Mean After AND",mean)            mean  = cv2.cvtColor(mean ,cv2.COLOR_GRAY2BGR )                         mask2 = cv2.cvtColor(mask2 ,cv2.COLOR_GRAY2BGR )                          eye = cv2.bitwise_and(~mask2,eyeImage)            cv2.imshow("eye before adding",eye)            eye=eye+mean            cv2.imshow("eye after adding",eye)                        outImage [y:y+h , x:x+w] = eye           cv2.imshow("Original Image" , clone )cv2.imshow("RedEyeCorrection" , outImage )#cv2.imshow("Gray image" , gray )#cv2.imwrite("Gray_image3.jpg",gray)cv2.waitKey()  cv2.destroyAllWindows()